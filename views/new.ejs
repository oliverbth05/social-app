<% include partials/header %>

<div id = root class = 'container'></div>
<input type = 'hidden' value = '<%= user._id %>' id = 'user_id'/>               <!-- Used to get the value of user_id from the ejs template -->
<input type = 'hidden' value = '<%= user.first_name%> <%=user.last_name%>' id = 'user_name'>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
<script src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
<script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js'></script>

<script type =  'text/babel'>
    console.log(document.getElementById('user_id').value);
    class App extends React.Component {
        constructor() {
            super()
            this.state = {
                title: '',
                body: '',
                tagField: '',
                user_id: document.getElementById('user_id').value,
                user_name: document.getElementById('user_name').value,
                tags: [],
                loading: false
            }   
            this.inputHandler = this.inputHandler.bind(this);
            this.addTag = this.addTag.bind(this);
            this.removeTag = this.removeTag.bind(this);
            this.submitForm = this.submitForm.bind(this);
        }
        
        inputHandler(e) {
            this.setState({
                [e.target.name] : e.target.value
            })
        }
        
        addTag(e) {
        e.preventDefault();
            if( this.state.tagField ) {
                this.setState({
                    tags: this.state.tags.concat(this.state.tagField),
                    tagField: ''
                })
            }
        }

        removeTag(index) {
            var tags = [...this.state.tags];
            tags.splice(index, 1);
            this.setState({
                tags: tags
            })
        }
        
        submitForm(e) {
            e.preventDefault();
            
            if(this.state.title && this.state.body) {
                var data = {
                    title: this.state.title,
                    body: this.state.body,
                    tags: this.state.tags,
                    user_id: this.state.user_id,
                    user_name: this.state.user_name
                }
                this.setState({
                    loading: true
                })
                axios.post('/new', data)
                .then(response => {
                    window.location.href  = '/home'
                })
            }
           
        }
        
        render() {
            return ( 
            <div class = 'container'>
                <form class = 'post-form' onSubmit = {this.submitForm}>
                    <div class = 'post-form__divider'>
                        <label class = 'post-form__label'>Title</label>
                        <input onChange = {this.inputHandler} class = 'input-block' name = 'title' type = 'text' value = {this.state.title} />
                    </div>
                    
                    <div class = 'post-form__divider'>
                        <label class = 'post-form__label'>Body</label>
                        <textarea onChange = {this.inputHandler} class = 'textarea' name = 'body' type = 'text' value = {this.state.body}></textarea>
                    </div>
        
                    <div class = 'post-form__divider'>
                        <label class = 'post-form__label'>Tags</label>
                        <input onChange = {this.inputHandler} class = 'input-block' type = 'text' value = {this.state.tagField} name = 'tagField' />
                        <button onClick = {this.addTag} class = 'button m-t-1' >Add tag</button>
                        
                        <div class = 'tag__container'>
                            { this.state.tags.length > 0 ? 
                               this.state.tags.map((tag, index) => {
                                   return <Tag onClick = {this.removeTag} index = {index}>{tag}</Tag>
                                })
                            : null }
                        </div>
                    </div>
                    
                    <div class = 'post-form__divider'>
                        <button disabled = {this.state.loading} class = 'button-block '>Submit</button>
                    </div>
        
                </form>
            </div>
            )
        }
    }
    const Tag = (props) => {
        return (
            <div class = 'tag'>
                <p>{props.children}</p>
                <i onClick = {() => {props.onClick(props.index)}} class="fas fa-times"></i>
            </div>
        )
    }
    ReactDOM.render(<App></App>, document.getElementById('root'));
</script>

<% include partials/footer %>